import sys
import pickle as pk
from keras import backend as K
import numpy as np
import os

def load_batch(fpath, label_key='labels'):
    with open(fpath, 'rb') as f:
        d = pk.load(f, encoding='bytes')
    data = d['data']
    labels = d[label_key]
    data = data.reshape(data.shape[0], 3, 100, 100)
    return data, labels
def load_data():
    path = 'F:\\DEMO\\data'

    num_train_samples = 6000

    x_train = np.empty((num_train_samples, 3, 100, 100), dtype='uint8')
    y_train = np.empty((num_train_samples,), dtype='uint8')

    fpath = os.path.join(path, 'data_batch')
    X,Y=load_batch(fpath)
    (x_train[0 : 6000, :, :, :],y_train[0 : 6000]) = load_batch(fpath)

    fpath = os.path.join(path, 'test_batch')
    x_test, y_test = load_batch(fpath)

    y_train = np.reshape(y_train, (len(y_train), 1))
    y_test = np.reshape(y_test, (len(y_test), 1))

    if K.image_data_format() == 'channels_last':
        x_train = x_train.transpose(0, 2, 3, 1)
        x_test = x_test.transpose(0, 2, 3, 1)

    return (x_train, y_train), (x_test, y_test)
